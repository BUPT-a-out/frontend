Parsing completed successfully.

--- Abstract Syntax Tree ---
+-- ROOT
|   +-- FUNC_DEF: main (sym: main, id: 24)
|   |   +-- LIST: FParams
|   |   +-- LIST: Block
|   |   |   +-- ARRAY_DEF: a (sym: a, id: 25)
|   |   |   |   +-- LIST: ArrayIniter
|   |   |   +-- ARRAY_DEF: b (sym: b, id: 26)
|   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   +-- CONST (int value: 1)
|   |   |   |   |   +-- CONST (int value: 2)
|   |   |   |   |   +-- CONST (int value: 3)
|   |   |   |   |   +-- CONST (int value: 4)
|   |   |   |   |   +-- CONST (int value: 5)
|   |   |   |   |   +-- CONST (int value: 6)
|   |   |   |   |   +-- CONST (int value: 7)
|   |   |   |   |   +-- CONST (int value: 8)
|   |   |   +-- ARRAY_DEF: c (sym: c, id: 27)
|   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   |   +-- CONST (int value: 1)
|   |   |   |   |   |   +-- CONST (int value: 2)
|   |   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   |   +-- CONST (int value: 3)
|   |   |   |   |   |   +-- CONST (int value: 4)
|   |   |   |   |   +-- CONST (int value: 5)
|   |   |   |   |   +-- CONST (int value: 6)
|   |   |   |   |   +-- CONST (int value: 7)
|   |   |   |   |   +-- CONST (int value: 8)
|   |   |   +-- ARRAY_DEF: d (sym: d, id: 28)
|   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   +-- CONST (int value: 1)
|   |   |   |   |   +-- CONST (int value: 2)
|   |   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   |   +-- CONST (int value: 3)
|   |   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   |   +-- CONST (int value: 5)
|   |   |   |   |   +-- CONST (int value: 7)
|   |   |   |   |   +-- CONST (int value: 8)
|   |   |   +-- ARRAY_DEF: e (sym: e, id: 29)
|   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   |   +-- ARRAY_ACCESS: Dims (sym: d, id: 28)
|   |   |   |   |   |   |   +-- CONST (int value: 2)
|   |   |   |   |   |   |   +-- CONST (int value: 1)
|   |   |   |   |   |   +-- ARRAY_ACCESS: Dims (sym: c, id: 27)
|   |   |   |   |   |   |   +-- CONST (int value: 2)
|   |   |   |   |   |   |   +-- CONST (int value: 1)
|   |   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   |   +-- CONST (int value: 3)
|   |   |   |   |   |   +-- CONST (int value: 4)
|   |   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   |   +-- CONST (int value: 5)
|   |   |   |   |   |   +-- CONST (int value: 6)
|   |   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   |   +-- CONST (int value: 7)
|   |   |   |   |   |   +-- CONST (int value: 8)
|   |   |   +-- ARRAY_DEF: f (sym: f, id: 30)
|   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   |   +-- CONST (int value: 1)
|   |   |   |   |   |   +-- CONST (int value: 2)
|   |   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   |   +-- CONST (int value: 3)
|   |   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   |   +-- CONST (int value: 4)
|   |   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   |   +-- CONST (int value: 5)
|   |   |   +-- ARRAY_DEF: g (sym: g, id: 31)
|   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   +-- CONST (int value: 1)
|   |   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   |   +-- CONST (int value: 2)
|   |   |   |   |   |   +-- LIST: ArrayIniter
|   |   |   |   |   |   |   +-- CONST (int value: 3)
|   |   |   +-- RETURN_STMT
|   |   |   |   +-- CONST (int value: 0)

--- Permanent Symbol Table ---
ID    Name                 Type            Data Type  Scope      Shape     
---------------------------------------------------------------------------
0     getint               function        int        1          N/A       
1     getch                function        int        1          N/A       
2     getfloat             function        float      1          N/A       
3     getarray             function        int        1          N/A       
4     array                array           int        2          0
5     getfarray            function        int        1          N/A       
6     array                array           float      2          0
7     putint               function        void       1          N/A       
8     value                var             int        2          N/A       
9     putch                function        void       1          N/A       
10    value                var             int        2          N/A       
11    putfloat             function        void       1          N/A       
12    value                var             float      2          N/A       
13    putarray             function        void       1          N/A       
14    len                  var             int        2          N/A       
15    array                array           int        2          0
16    putfarray            function        void       1          N/A       
17    len                  var             int        2          N/A       
18    array                array           float      2          0
19    putf                 function        void       1          N/A       
20    format_string        var             char       2          N/A       
21    value                var             int        2          N/A       
22    starttime            function        void       1          N/A       
23    stoptime             function        void       1          N/A       
24    main                 function        int        1          N/A       
25    a                    array           int        3          4 2
26    b                    array           int        3          4 2
27    c                    array           int        3          4 2
28    d                    array           int        3          4 2
29    e                    array           int        3          4 2
30    f                    array           int        3          4 2
31    g                    array           int        3          2 2 2
---------------------------------------------------------------------------

--- Generated IR ---
; ModuleID = 'main'

define i32 @main() {
main.entry:
  %a.25 = alloca [4 x [2 x i32]]
  %a.25.initer = alloca i32
  store i32 0, i32* %a.25.initer
  br label %a.25.initer.while.cond
a.25.initer.while.cond:
  %2 = load i32, i32* %a.25.initer
  %lt.3 = icmp slt i32 %2, 8
  br i1 %lt.3, label %a.25.initer.while.loop, label %a.25.initer.while.merge
a.25.initer.while.loop:
  %0 = load i32, i32* %a.25.initer
  %1 = getelementptr [8 x i32], [4 x [2 x i32]]* %a.25, i32 %0
  store i32 0, i32* %1
  %0 = load i32, i32* %a.25.initer
  %1 = add i32 %0, 1
  store i32 %1, i32* %a.25.initer
  br label %a.25.initer.while.cond
a.25.initer.while.merge:
  %b.26 = alloca [4 x [2 x i32]]
  %b.26.initer = alloca i32
  store i32 0, i32* %b.26.initer
  br label %b.26.initer.while.cond
b.26.initer.while.cond:
  %6 = load i32, i32* %b.26.initer
  %lt.7 = icmp slt i32 %6, 8
  br i1 %lt.7, label %b.26.initer.while.loop, label %b.26.initer.while.merge
b.26.initer.while.loop:
  %2 = load i32, i32* %b.26.initer
  %3 = getelementptr [8 x i32], [4 x [2 x i32]]* %b.26, i32 %2
  store i32 0, i32* %3
  %4 = load i32, i32* %b.26.initer
  %5 = add i32 %4, 1
  store i32 %5, i32* %b.26.initer
  br label %b.26.initer.while.cond
b.26.initer.while.merge:
  %4 = getelementptr [8 x i32], [4 x [2 x i32]]* %b.26, i32 7
  store i32 8, i32* %4
  %5 = getelementptr [8 x i32], [4 x [2 x i32]]* %b.26, i32 6
  store i32 7, i32* %5
  %6 = getelementptr [8 x i32], [4 x [2 x i32]]* %b.26, i32 5
  store i32 6, i32* %6
  %7 = getelementptr [8 x i32], [4 x [2 x i32]]* %b.26, i32 4
  store i32 5, i32* %7
  %8 = getelementptr [8 x i32], [4 x [2 x i32]]* %b.26, i32 3
  store i32 4, i32* %8
  %9 = getelementptr [8 x i32], [4 x [2 x i32]]* %b.26, i32 2
  store i32 3, i32* %9
  %10 = getelementptr [8 x i32], [4 x [2 x i32]]* %b.26, i32 1
  store i32 2, i32* %10
  %11 = getelementptr [8 x i32], [4 x [2 x i32]]* %b.26, i32 0
  store i32 1, i32* %11
  %c.27 = alloca [4 x [2 x i32]]
  %c.27.initer = alloca i32
  store i32 0, i32* %c.27.initer
  br label %c.27.initer.while.cond
c.27.initer.while.cond:
  %10 = load i32, i32* %c.27.initer
  %lt.11 = icmp slt i32 %10, 8
  br i1 %lt.11, label %c.27.initer.while.loop, label %c.27.initer.while.merge
c.27.initer.while.loop:
  %12 = load i32, i32* %c.27.initer
  %13 = getelementptr [8 x i32], [4 x [2 x i32]]* %c.27, i32 %12
  store i32 0, i32* %13
  %8 = load i32, i32* %c.27.initer
  %9 = add i32 %8, 1
  store i32 %9, i32* %c.27.initer
  br label %c.27.initer.while.cond
c.27.initer.while.merge:
  %14 = getelementptr [8 x i32], [4 x [2 x i32]]* %c.27, i32 7
  store i32 8, i32* %14
  %15 = getelementptr [8 x i32], [4 x [2 x i32]]* %c.27, i32 6
  store i32 7, i32* %15
  %16 = getelementptr [8 x i32], [4 x [2 x i32]]* %c.27, i32 5
  store i32 6, i32* %16
  %17 = getelementptr [8 x i32], [4 x [2 x i32]]* %c.27, i32 4
  store i32 5, i32* %17
  %18 = getelementptr [8 x i32], [4 x [2 x i32]]* %c.27, i32 3
  store i32 4, i32* %18
  %19 = getelementptr [8 x i32], [4 x [2 x i32]]* %c.27, i32 2
  store i32 3, i32* %19
  %20 = getelementptr [8 x i32], [4 x [2 x i32]]* %c.27, i32 1
  store i32 2, i32* %20
  %21 = getelementptr [8 x i32], [4 x [2 x i32]]* %c.27, i32 0
  store i32 1, i32* %21
  %d.28 = alloca [4 x [2 x i32]]
  %d.28.initer = alloca i32
  store i32 0, i32* %d.28.initer
  br label %d.28.initer.while.cond
d.28.initer.while.cond:
  %14 = load i32, i32* %d.28.initer
  %lt.15 = icmp slt i32 %14, 8
  br i1 %lt.15, label %d.28.initer.while.loop, label %d.28.initer.while.merge
d.28.initer.while.loop:
  %22 = load i32, i32* %d.28.initer
  %23 = getelementptr [8 x i32], [4 x [2 x i32]]* %d.28, i32 %22
  store i32 0, i32* %23
  %12 = load i32, i32* %d.28.initer
  %13 = add i32 %12, 1
  store i32 %13, i32* %d.28.initer
  br label %d.28.initer.while.cond
d.28.initer.while.merge:
  %24 = getelementptr [8 x i32], [4 x [2 x i32]]* %d.28, i32 7
  store i32 8, i32* %24
  %25 = getelementptr [8 x i32], [4 x [2 x i32]]* %d.28, i32 6
  store i32 7, i32* %25
  %26 = getelementptr [8 x i32], [4 x [2 x i32]]* %d.28, i32 4
  store i32 5, i32* %26
  %27 = getelementptr [8 x i32], [4 x [2 x i32]]* %d.28, i32 2
  store i32 3, i32* %27
  %28 = getelementptr [8 x i32], [4 x [2 x i32]]* %d.28, i32 1
  store i32 2, i32* %28
  %29 = getelementptr [8 x i32], [4 x [2 x i32]]* %d.28, i32 0
  store i32 1, i32* %29
  %e.29 = alloca [4 x [2 x i32]]
  %e.29.initer = alloca i32
  store i32 0, i32* %e.29.initer
  br label %e.29.initer.while.cond
e.29.initer.while.cond:
  %18 = load i32, i32* %e.29.initer
  %lt.19 = icmp slt i32 %18, 8
  br i1 %lt.19, label %e.29.initer.while.loop, label %e.29.initer.while.merge
e.29.initer.while.loop:
  %30 = load i32, i32* %e.29.initer
  %31 = getelementptr [8 x i32], [4 x [2 x i32]]* %e.29, i32 %30
  store i32 0, i32* %31
  %16 = load i32, i32* %e.29.initer
  %17 = add i32 %16, 1
  store i32 %17, i32* %e.29.initer
  br label %e.29.initer.while.cond
e.29.initer.while.merge:
  %32 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* %d.28, i32 2, i32 1
  %33 = load i32, i32* %32
  %34 = getelementptr [4 x [2 x i32]], [4 x [2 x i32]]* %c.27, i32 2, i32 1
  %35 = load i32, i32* %34
  %36 = getelementptr [8 x i32], [4 x [2 x i32]]* %e.29, i32 7
  store i32 8, i32* %36
  %37 = getelementptr [8 x i32], [4 x [2 x i32]]* %e.29, i32 6
  store i32 7, i32* %37
  %38 = getelementptr [8 x i32], [4 x [2 x i32]]* %e.29, i32 5
  store i32 6, i32* %38
  %39 = getelementptr [8 x i32], [4 x [2 x i32]]* %e.29, i32 4
  store i32 5, i32* %39
  %40 = getelementptr [8 x i32], [4 x [2 x i32]]* %e.29, i32 3
  store i32 4, i32* %40
  %41 = getelementptr [8 x i32], [4 x [2 x i32]]* %e.29, i32 2
  store i32 3, i32* %41
  %42 = getelementptr [8 x i32], [4 x [2 x i32]]* %e.29, i32 1
  store i32 %35, i32* %42
  %43 = getelementptr [8 x i32], [4 x [2 x i32]]* %e.29, i32 0
  store i32 %33, i32* %43
  %f.30 = alloca [4 x [2 x i32]]
  %f.30.initer = alloca i32
  store i32 0, i32* %f.30.initer
  br label %f.30.initer.while.cond
f.30.initer.while.cond:
  %22 = load i32, i32* %f.30.initer
  %lt.23 = icmp slt i32 %22, 8
  br i1 %lt.23, label %f.30.initer.while.loop, label %f.30.initer.while.merge
f.30.initer.while.loop:
  %44 = load i32, i32* %f.30.initer
  %45 = getelementptr [8 x i32], [4 x [2 x i32]]* %f.30, i32 %44
  store i32 0, i32* %45
  %20 = load i32, i32* %f.30.initer
  %21 = add i32 %20, 1
  store i32 %21, i32* %f.30.initer
  br label %f.30.initer.while.cond
f.30.initer.while.merge:
  %46 = getelementptr [8 x i32], [4 x [2 x i32]]* %f.30, i32 6
  store i32 5, i32* %46
  %47 = getelementptr [8 x i32], [4 x [2 x i32]]* %f.30, i32 4
  store i32 4, i32* %47
  %48 = getelementptr [8 x i32], [4 x [2 x i32]]* %f.30, i32 2
  store i32 3, i32* %48
  %49 = getelementptr [8 x i32], [4 x [2 x i32]]* %f.30, i32 1
  store i32 2, i32* %49
  %50 = getelementptr [8 x i32], [4 x [2 x i32]]* %f.30, i32 0
  store i32 1, i32* %50
  %g.31 = alloca [2 x [2 x [2 x i32]]]
  %g.31.initer = alloca i32
  store i32 0, i32* %g.31.initer
  br label %g.31.initer.while.cond
g.31.initer.while.cond:
  %26 = load i32, i32* %g.31.initer
  %lt.27 = icmp slt i32 %26, 8
  br i1 %lt.27, label %g.31.initer.while.loop, label %g.31.initer.while.merge
g.31.initer.while.loop:
  %51 = load i32, i32* %g.31.initer
  %52 = getelementptr [8 x i32], [2 x [2 x [2 x i32]]]* %g.31, i32 %51
  store i32 0, i32* %52
  %24 = load i32, i32* %g.31.initer
  %25 = add i32 %24, 1
  store i32 %25, i32* %g.31.initer
  br label %g.31.initer.while.cond
g.31.initer.while.merge:
  %53 = getelementptr [8 x i32], [2 x [2 x [2 x i32]]]* %g.31, i32 6
  store i32 3, i32* %53
  %54 = getelementptr [8 x i32], [2 x [2 x [2 x i32]]]* %g.31, i32 4
  store i32 2, i32* %54
  %55 = getelementptr [8 x i32], [2 x [2 x [2 x i32]]]* %g.31, i32 0
  store i32 1, i32* %55
  ret i32 0
}


